webpackHotUpdate("static/development/pages/kimkyeseung/splendor.js",{

/***/ "./kimkyeseung/src/lib/game.js":
/*!*************************************!*\
  !*** ./kimkyeseung/src/lib/game.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutProperties */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\");\n/* harmony import */ var _assets_developmentCards_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../assets/developmentCards.json */ \"./kimkyeseung/assets/developmentCards.json\");\nvar _assets_developmentCards_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../assets/developmentCards.json */ \"./kimkyeseung/assets/developmentCards.json\", 1);\n/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validator */ \"./kimkyeseung/src/lib/validator.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/utils */ \"./kimkyeseung/src/lib/utils.js\");\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nvar developCards = Object.keys(_assets_developmentCards_json__WEBPACK_IMPORTED_MODULE_3__).reduce(function (cards, cardId) {\n  var _DEVELOPMENT_CARDS$ca = _assets_developmentCards_json__WEBPACK_IMPORTED_MODULE_3__[cardId],\n      grade = _DEVELOPMENT_CARDS$ca.grade,\n      id = _DEVELOPMENT_CARDS$ca.id;\n\n  switch (grade) {\n    case 1:\n      cards.gradeOne.push(id);\n      return cards;\n\n    case 2:\n      cards.gradeTwo.push(id);\n      return cards;\n\n    case 3:\n      cards.gradeThree.push(id);\n      return cards;\n\n    default:\n      return cards;\n  }\n}, {\n  gradeOne: [],\n  gradeTwo: [],\n  gradeThree: []\n});\n\nvar game = function game(playerNames) {\n  var Splendor = {\n    name: \"splendor\",\n    setup: function setup(_ref) {\n      var numPlayers = _ref.numPlayers,\n          random = _ref.random,\n          G = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_ref, [\"numPlayers\", \"random\"]);\n\n      var developOneDeck = random.Shuffle(developCards.gradeOne);\n      var developTwoDeck = random.Shuffle(developCards.gradeTwo);\n      var developThreeDeck = random.Shuffle(developCards.gradeThree);\n      var board = {};\n      board.dev10 = developOneDeck.pop();\n      board.dev11 = developOneDeck.pop();\n      board.dev12 = developOneDeck.pop();\n      board.dev13 = developOneDeck.pop();\n      board.dev20 = developTwoDeck.pop();\n      board.dev21 = developTwoDeck.pop();\n      board.dev22 = developTwoDeck.pop();\n      board.dev23 = developTwoDeck.pop();\n      board.dev30 = developThreeDeck.pop();\n      board.dev31 = developThreeDeck.pop();\n      board.dev32 = developThreeDeck.pop();\n      board.dev33 = developThreeDeck.pop();\n      var tokenStore = {};\n      var tokenCount = numPlayers * 2 - 1 + (numPlayers === 2 ? 1 : 0);\n      tokenStore.red = tokenStore.blue = tokenStore.black = tokenStore.white = tokenStore.green = tokenCount;\n      tokenStore.yellow = 5;\n      var fields = {};\n      var defaultValues = {\n        white: 0,\n        red: 0,\n        blue: 0,\n        green: 0,\n        black: 0,\n        yellow: 0\n      };\n      Array(numPlayers).fill(1).forEach(function (a, i) {\n        fields[\"player\".concat(i)] = {\n          name: playerNames[i],\n          developments: _objectSpread({}, defaultValues),\n          token: _objectSpread({}, defaultValues),\n          reservedDevs: [],\n          hand: {\n            tokens: [],\n            development: null\n          },\n          victoryPoints: 0\n        };\n      });\n      return {\n        fields: fields,\n        board: board,\n        tokenStore: tokenStore,\n        developOneDeck: developOneDeck,\n        developTwoDeck: developTwoDeck,\n        developThreeDeck: developThreeDeck\n      };\n    },\n    moves: {\n      selectDevelopment: function selectDevelopment(G, ctx, devId, current, next) {\n        var cb = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function () {};\n        var fields = G.fields,\n            board = G.board;\n        var hand = fields[\"player\".concat(ctx.currentPlayer)].hand;\n\n        if (hand.development) {\n          var _index = current.index,\n              _grade = current.grade,\n              development = current.development;\n          board[\"dev\".concat(_grade).concat(_index)] = development;\n        }\n\n        hand.development = devId;\n        var grade = next.grade,\n            index = next.index;\n        board[\"dev\".concat(grade).concat(index)] = null;\n        cb(hand.development);\n      },\n      deselectDevelopment: function deselectDevelopment(G, ctx, current) {\n        var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n        var fields = G.fields,\n            board = G.board;\n        var hand = fields[\"player\".concat(ctx.currentPlayer)].hand;\n\n        if (!hand.development) {\n          return;\n        }\n\n        var grade = current.grade,\n            index = current.index;\n        board[\"dev\".concat(grade).concat(index)] = hand.development;\n        hand.development = null;\n        cb();\n      },\n      buyDevelopment: function buyDevelopment(G, ctx, current) {\n        var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n        var fields = G.fields,\n            developOneDeck = G.developOneDeck,\n            developTwoDeck = G.developTwoDeck,\n            developThreeDeck = G.developThreeDeck,\n            board = G.board,\n            tokenStore = G.tokenStore;\n        var currentPlayer = fields[\"player\".concat(ctx.currentPlayer)];\n        var developments = currentPlayer.developments,\n            victoryPoints = currentPlayer.victoryPoints,\n            token = currentPlayer.token,\n            hand = currentPlayer.hand;\n        var targetDevelopment = _assets_developmentCards_json__WEBPACK_IMPORTED_MODULE_3__[hand.development];\n        var value = targetDevelopment.value,\n            valueAmount = targetDevelopment.valueAmount,\n            victoryPoint = targetDevelopment.victoryPoint,\n            cost = targetDevelopment.cost;\n        var lackAmount = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_5__[\"getLackAmount\"])({\n          developments: developments,\n          token: token\n        }, cost);\n        var buyable = token.yellow >= lackAmount;\n\n        if (buyable) {\n          var lack = Object.keys(token).reduce(function (diff, color) {\n            var individualCost = cost[color] || 0;\n            var discountedIndividualCost = individualCost > developments[color] ? individualCost - developments[color] : 0;\n\n            if (discountedIndividualCost > token[color]) {\n              var toPay = discountedIndividualCost - token[color];\n              diff += toPay;\n              token[color] -= toPay;\n              tokenStore[color] += toPay;\n            } else {\n              token[color] -= discountedIndividualCost;\n              tokenStore[color] += discountedIndividualCost;\n            }\n\n            return diff;\n          }, 0);\n          token.yellow -= lack;\n          tokenStore.yellow += lack;\n          developments[value] += valueAmount;\n          fields[\"player\".concat(ctx.currentPlayer)].victoryPoints = victoryPoints + victoryPoint;\n          var deck = {\n            '1': developOneDeck,\n            '2': developTwoDeck,\n            '3': developThreeDeck\n          };\n          var grade = current.grade,\n              index = current.index;\n          board[\"dev\".concat(grade).concat(index)] = deck[grade].pop();\n          hand.development = null;\n          cb();\n          ctx.events.endTurn();\n        } else {\n          alert('비용이 모자랍니다.');\n        }\n      },\n      reserveDevelopment: function reserveDevelopment(G, ctx, current) {\n        var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n        var fields = G.fields,\n            developOneDeck = G.developOneDeck,\n            developTwoDeck = G.developTwoDeck,\n            developThreeDeck = G.developThreeDeck,\n            board = G.board,\n            tokenStore = G.tokenStore;\n        var _fields$ = fields[\"player\".concat(ctx.currentPlayer)],\n            reservedDevs = _fields$.reservedDevs,\n            token = _fields$.token,\n            hand = _fields$.hand;\n        var targetDevelopment = _assets_developmentCards_json__WEBPACK_IMPORTED_MODULE_3__[hand.development];\n        var able = Object(_validator__WEBPACK_IMPORTED_MODULE_4__[\"reserveDevelopmentValidator\"])(reservedDevs);\n\n        if (able) {\n          if (tokenStore.yellow) {\n            tokenStore.yellow--;\n            token.yellow++;\n          }\n\n          reservedDevs.push(targetDevelopment.id);\n          var deck = {\n            '1': developOneDeck,\n            '2': developTwoDeck,\n            '3': developThreeDeck\n          };\n          var grade = current.grade,\n              index = current.index;\n          board[\"dev\".concat(grade).concat(index)] = deck[grade].pop();\n          hand.development = null;\n          cb();\n          ctx.events.endTurn();\n        } else {\n          alert('더 이상 예약할 수 없습니다.');\n        }\n      },\n      selectToken: function selectToken(G, ctx, token) {\n        var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n        var tokenStore = G.tokenStore,\n            fields = G.fields;\n        var hand = fields[\"player\".concat(ctx.currentPlayer)].hand;\n\n        if (tokenStore[token]) {\n          tokenStore[token]--;\n          hand.tokens.push(token);\n        }\n\n        var result = Object(_validator__WEBPACK_IMPORTED_MODULE_4__[\"getTokenValidator\"])(hand.tokens, tokenStore);\n        cb(result);\n      },\n      deselectToken: function deselectToken(G, ctx, index) {\n        var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n        var tokenStore = G.tokenStore,\n            fields = G.fields;\n        var hand = fields[\"player\".concat(ctx.currentPlayer)].hand;\n\n        var _hand$tokens$splice = hand.tokens.splice(index, 1),\n            _hand$tokens$splice2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_hand$tokens$splice, 1),\n            token = _hand$tokens$splice2[0];\n\n        tokenStore[token]++;\n        var result = Object(_validator__WEBPACK_IMPORTED_MODULE_4__[\"getTokenValidator\"])(hand.tokens);\n        cb(result);\n      },\n      cancelSelectedToken: function cancelSelectedToken(G, ctx) {\n        var cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var tokenStore = G.tokenStore,\n            fields = G.fields;\n        var hand = fields[\"player\".concat(ctx.currentPlayer)].hand;\n        hand.tokens.forEach(function (token) {\n          tokenStore[token]++;\n        });\n        hand.tokens.length = 0;\n        cb();\n      },\n      getTokens: function getTokens(G, ctx, cb) {\n        var fields = G.fields;\n        var _fields$2 = fields[\"player\".concat(ctx.currentPlayer)],\n            hand = _fields$2.hand,\n            token = _fields$2.token;\n        hand.tokens.forEach(function (t) {\n          token[t]++;\n        });\n        hand.tokens = [];\n        var tokenLimit = 10;\n        var tokenCount = Object.values(token).reduce(function (count, t) {\n          return count + t;\n        });\n\n        if (tokenCount > tokenLimit) {\n          console.log('have to return');\n          ctx.events.setStage('returnTokens');\n        } else {\n          cb();\n          ctx.events.endTurn();\n        }\n      }\n    },\n    turn: {\n      // endIf: (G, ctx) => ({ next: '3' }),\n      stages: {\n        returnTokens: {\n          moves: {\n            returnTokens: function returnTokens(over) {\n              console.log('return token');\n            }\n          }\n        }\n      }\n    },\n    endIf: function endIf(G, ctx) {\n      return false; // if (IsVictory(G.cells)) {\n      //   return { winner: ctx.currentPlayer }\n      // }\n      // if (G.cells.filter(c => c === null).length === 0) {\n      //   return { draw: true }\n      // }\n    },\n    ai: {\n      enumerate: function enumerate(G) {\n        var moves = [];\n\n        for (var i = 0; i < 9; i++) {\n          if (G.cells[i] === null) {\n            moves.push({\n              move: \"clickCell\",\n              args: [i]\n            });\n          }\n        }\n\n        return moves;\n      }\n    }\n  };\n  return Splendor;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (game);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./kimkyeseung/src/lib/game.js\n");

/***/ })

})